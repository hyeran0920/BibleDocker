<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.library.bible.member.repository.IMemberRepository">
    <!-- ResultMap 정의 -->
    <resultMap id="memberResultMap" type="Member">
        <id property="memId" column="mem_id"/>
        <result property="memName" column="mem_name"/>
        <result property="memPassword" column="mem_password"/>
        <result property="memEmail" column="mem_email"/>
        <result property="memPhone" column="mem_phone"/>
	    <collection property="roles" ofType="Role">
	        <result property="memId" column="mem_id"/>
	        <result property="roleName" column="role_name"/>
	    </collection>
    </resultMap>
    
    <!-- 회원 조회 -->
    <select id="selectMember" parameterType="int" resultMap="memberResultMap">
        SELECT 
            m.mem_id,
            m.mem_name,
            m.mem_password,
            m.mem_email,
            m.mem_phone,
            r.mem_id,
            r.role_name
        FROM member m
        LEFT JOIN role r ON m.mem_id = r.mem_id
        WHERE m.mem_id = #{memId}
    </select>
    
    <!-- 이메일로 회원 조회 -->
    <select id="selectMemberByMemEmail" parameterType="string" resultMap="memberResultMap">
        SELECT 
            m.mem_id,
            m.mem_name,
            m.mem_password,
            m.mem_email,
            m.mem_phone,
            r.mem_id,
            r.role_name
        FROM member m
        LEFT JOIN role r ON m.mem_id = r.mem_id
        WHERE m.mem_email = #{memEmail}
    </select>
    
    <!-- 모든 회원 조회 -->
	<select id="selectAllMembers" resultMap="memberResultMap">
	    SELECT 
	        m.mem_id,
	        m.mem_name,
	        m.mem_password,
	        m.mem_email,
            m.mem_phone,
            r.mem_id,
	        r.role_name
	    FROM member m
	    LEFT JOIN role r ON m.mem_id = r.mem_id
	</select>

    <!-- 회원 등록 -->
    <insert id="insertMember" parameterType="Member" useGeneratedKeys="true" keyProperty="memId" keyColumn="mem_id">
        INSERT INTO member (
            mem_name,
            mem_password,
            mem_email,
            mem_phone
        ) VALUES (
            #{memName},
            #{memPassword},
            #{memEmail},
            #{memPhone}
        )
    </insert>

    <!-- 회원 수정 -->
    <update id="updateMember" parameterType="Member">
        UPDATE member
        SET 
            mem_name = #{memName},
            mem_email = #{memEmail},
            mem_phone = #{memPhone},
            mem_password = #{memPassword}
        WHERE mem_id = #{memId}
    </update>
    
    <!-- 회원 삭제 -->
    <delete id="deleteMember" parameterType="int">
        DELETE FROM member WHERE mem_id = #{memId}
    </delete>
</mapper>